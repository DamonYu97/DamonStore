<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <http pattern="/index.jsp" security="none"/>
    <http pattern="/static/**" security="none"/>
    <http>
        <form-login login-page="/admin/adminLogin" login-processing-url="/login" authentication-failure-url="/admin/adminLogin?error=true" authentication-success-forward-url="/admin/index"/>
        <logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/admin/adminLogin"></logout>
        <remember-me token-repository-ref="jdbcTokenRepository" token-validity-seconds="3600"></remember-me>
        <csrf disabled="true"/>
        <!-- 配置拦截的请求地址，任何管理系统的请求地址都必须有权限 -->
        <intercept-url pattern="/admin/adminLogin" access="permitAll()"/>
        <intercept-url pattern="/admin/memberManage" access="hasAuthority('ROLE_CHECK_MEMBER')"></intercept-url>
        <intercept-url pattern="/admin/userManager" access="hasAuthority('ROLE_CHECK_ADMIN')"></intercept-url>
        <intercept-url pattern="/admin/productManager" access="hasAuthority('ROLE_CHECK_PRODUCT')"></intercept-url>
        <intercept-url pattern="/admin/pointManager" access="hasAuthority('ROLE_CHECK_POINT')"></intercept-url>
        <intercept-url pattern="/admin/orderManager" access="hasAuthority('ROLE_CHECK_ORDER')"></intercept-url>
        <intercept-url pattern="/admin/**" access="isFullyAuthenticated()" />
    </http>
    <!--配置授权信息-->
    <authentication-manager>
        <authentication-provider user-service-ref="adminDetailsService">
            <password-encoder ref="encoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </beans:bean>

    <beans:bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
        <beans:property name="createTableOnStartup" value="true"></beans:property>
    </beans:bean>

</beans:beans>